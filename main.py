import random


class LobbySettings:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–±–±–∏."""

    PLAYERS_COUNT: int = 4


class Settings:
    """–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."""

    MIN_LIVE_RATIO: float = 0.2
    MAX_LIVE_RATIO: float = 0.7
    MAX_BULLETS_COUNT: int = 8
    MAGAZINE_CAPACITY: int = 4
    LIVE_BULLET: str = 'üî¥'
    BLANK_BULLET: str = 'üîµ'

    @classmethod
    def get_bullet_symbol(self, is_live: bool) -> str:
        return self.LIVE_BULLET if is_live else self.BLANK_BULLET


NUMS_MAPPER: dict[int, str] = {
    1: '1Ô∏è‚É£',
    2: '2Ô∏è‚É£',
    3: '3Ô∏è‚É£',
    4: '4Ô∏è‚É£',
    5: '5Ô∏è‚É£',
    6: '6Ô∏è‚É£',
    7: '7Ô∏è‚É£',
    8: '8Ô∏è‚É£',
}


def charge_bullets():
    if not (2 <= LobbySettings.PLAYERS_COUNT <= 4):
        raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç 2 –¥–æ 4 –∏–≥—Ä–æ–∫–æ–≤")

    total: int = random.randint(LobbySettings.PLAYERS_COUNT, Settings.MAX_BULLETS_COUNT)
    if total > 6:
        min_live: int = 3
    elif total > 4:
        min_live: int = 2
    else:
        min_live: int = 1

    min_live: int = max(min_live, int(total * Settings.MIN_LIVE_RATIO))
    max_live: int = max(min_live, int(total * Settings.MAX_LIVE_RATIO))
    num_live: int = random.randint(min_live, max_live)
    return [True] * num_live + [False] * (total - num_live)


def display_bullets():
    bullets: list[bool] = charge_bullets()

    random.shuffle(bullets)
    print(
        '–°–∫–∞–∂–∏ –∏–≥—Ä–æ–∫–∞–º, —á—Ç–æ –≤ –∏–≥—Ä–µ:\n'
        f'{NUMS_MAPPER[bullets.count(True)]}{Settings.LIVE_BULLET} –∏ {NUMS_MAPPER[bullets.count(False)]}{Settings.BLANK_BULLET}\n'
        '–ò–ª–∏ –ø–æ–∫–∞–∂–∏ –∏–º –≥–∏–ª—å–∑—ã:\n'
        f'{"".join([Settings.get_bullet_symbol(bullet) for bullet in bullets])}'
    )

    print('-'*28)

    random.shuffle(bullets)
    if len(bullets) > Settings.MAGAZINE_CAPACITY:
        middle: int = (len(bullets) + 1) // 2
        bullets.insert(middle, ' | ')
    print(
        '–ó–∞—Ä—è–∂–∞–π –ø–∞—Ç—Ä–æ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω,\n'
        '–∫–∞–∂–¥—É—é —Å–µ–∫—Ü–∏—é —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ:\n'
        f'{"".join([Settings.get_bullet_symbol(bullet) if isinstance(bullet, bool) else bullet for bullet in bullets])}\n'
        '–ù–µ –∑–∞–±—É–¥—å –ø–µ—Ä–µ–¥–µ—Ä–Ω—É—Ç—å —Ü–µ–≤—å—ë!'
    )
    

if __name__ == '__main__':
    display_bullets()
